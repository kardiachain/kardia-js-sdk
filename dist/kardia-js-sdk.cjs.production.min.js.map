{"version":3,"file":"kardia-js-sdk.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/util/hash.ts","../src/util/nat.ts","../src/util/bytes.ts","../src/util/string.ts","../src/util/account.ts","../src/account/index.ts","../src/util/amount.ts","../src/kai/index.ts","../src/util/rlp.ts","../src/util/time.ts","../src/transaction/index.ts","../src/transaction/config.ts","../src/util/abi/parser.ts","../src/util/abi/index.ts","../src/util/number.ts","../src/smc/index.ts","../src/krc20/krc20.abi.ts","../src/krc20/index.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// This was ported from https://github.com/emn178/js-sha3, with some minor\n// modifications and pruning. It is licensed under MIT:\n//\n// Copyright 2015-2016 Chen, Yi-Cyuan\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst HEX_CHARS = '0123456789abcdef'.split('');\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\nconst SHIFT = [0, 8, 16, 24];\nconst RC = [\n  1,\n  0,\n  32898,\n  0,\n  32906,\n  2147483648,\n  2147516416,\n  2147483648,\n  32907,\n  0,\n  2147483649,\n  0,\n  2147516545,\n  2147483648,\n  32777,\n  2147483648,\n  138,\n  0,\n  136,\n  0,\n  2147516425,\n  0,\n  2147483658,\n  0,\n  2147516555,\n  0,\n  139,\n  2147483648,\n  32905,\n  2147483648,\n  32771,\n  2147483648,\n  32770,\n  2147483648,\n  128,\n  2147483648,\n  32778,\n  0,\n  2147483658,\n  2147483648,\n  2147516545,\n  2147483648,\n  32896,\n  2147483648,\n  2147483649,\n  0,\n  2147516424,\n  2147483648,\n];\n\nconst Keccak = (bits: number) => ({\n  blocks: [],\n  reset: true,\n  block: 0,\n  start: 0,\n  blockCount: (1600 - (bits << 1)) >> 5,\n  outputBlocks: bits >> 5,\n  s: (s => ([] as any[]).concat(s, s, s, s, s))([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n});\n\nconst update = (state: any, message: string | number[]) => {\n  const length = message.length,\n    blocks = state.blocks,\n    byteCount = state.blockCount << 2,\n    blockCount = state.blockCount,\n    outputBlocks = state.outputBlocks,\n    s = state.s;\n  let index = 0,\n    i,\n    code;\n\n  // update\n  while (index < length) {\n    if (state.reset) {\n      state.reset = false;\n      blocks[0] = state.block;\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    if (typeof message !== 'string') {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n        } else {\n          code =\n            0x10000 +\n            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n          blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n        }\n      }\n    }\n    state.lastByteIndex = i;\n    if (i >= byteCount) {\n      state.start = i - byteCount;\n      state.block = blocks[blockCount];\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n      f(s);\n      state.reset = true;\n    } else {\n      state.start = i;\n    }\n  }\n\n  // finalize\n  i = state.lastByteIndex;\n  blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n  if (state.lastByteIndex === byteCount) {\n    blocks[0] = blocks[blockCount];\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n  blocks[blockCount - 1] |= 0x80000000;\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n  f(s);\n\n  // toString\n  let hex = '',\n    j = 0,\n    block;\n  i = 0;\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex +=\n        HEX_CHARS[(block >> 4) & 0x0f] +\n        HEX_CHARS[block & 0x0f] +\n        HEX_CHARS[(block >> 12) & 0x0f] +\n        HEX_CHARS[(block >> 8) & 0x0f] +\n        HEX_CHARS[(block >> 20) & 0x0f] +\n        HEX_CHARS[(block >> 16) & 0x0f] +\n        HEX_CHARS[(block >> 28) & 0x0f] +\n        HEX_CHARS[(block >> 24) & 0x0f];\n    }\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n  return '0x' + hex;\n};\n\nconst f = (s: any) => {\n  let h,\n    l,\n    n,\n    c0,\n    c1,\n    c2,\n    c3,\n    c4,\n    c5,\n    c6,\n    c7,\n    c8,\n    c9,\n    b0,\n    b1,\n    b2,\n    b3,\n    b4,\n    b5,\n    b6,\n    b7,\n    b8,\n    b9,\n    b10,\n    b11,\n    b12,\n    b13,\n    b14,\n    b15,\n    b16,\n    b17,\n    b18,\n    b19,\n    b20,\n    b21,\n    b22,\n    b23,\n    b24,\n    b25,\n    b26,\n    b27,\n    b28,\n    b29,\n    b30,\n    b31,\n    b32,\n    b33,\n    b34,\n    b35,\n    b36,\n    b37,\n    b38,\n    b39,\n    b40,\n    b41,\n    b42,\n    b43,\n    b44,\n    b45,\n    b46,\n    b47,\n    b48,\n    b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n    h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n    l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n    l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n    l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n    l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n    l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n\n    b0 = s[0];\n    b1 = s[1];\n    b32 = (s[11] << 4) | (s[10] >>> 28);\n    b33 = (s[10] << 4) | (s[11] >>> 28);\n    b14 = (s[20] << 3) | (s[21] >>> 29);\n    b15 = (s[21] << 3) | (s[20] >>> 29);\n    b46 = (s[31] << 9) | (s[30] >>> 23);\n    b47 = (s[30] << 9) | (s[31] >>> 23);\n    b28 = (s[40] << 18) | (s[41] >>> 14);\n    b29 = (s[41] << 18) | (s[40] >>> 14);\n    b20 = (s[2] << 1) | (s[3] >>> 31);\n    b21 = (s[3] << 1) | (s[2] >>> 31);\n    b2 = (s[13] << 12) | (s[12] >>> 20);\n    b3 = (s[12] << 12) | (s[13] >>> 20);\n    b34 = (s[22] << 10) | (s[23] >>> 22);\n    b35 = (s[23] << 10) | (s[22] >>> 22);\n    b16 = (s[33] << 13) | (s[32] >>> 19);\n    b17 = (s[32] << 13) | (s[33] >>> 19);\n    b48 = (s[42] << 2) | (s[43] >>> 30);\n    b49 = (s[43] << 2) | (s[42] >>> 30);\n    b40 = (s[5] << 30) | (s[4] >>> 2);\n    b41 = (s[4] << 30) | (s[5] >>> 2);\n    b22 = (s[14] << 6) | (s[15] >>> 26);\n    b23 = (s[15] << 6) | (s[14] >>> 26);\n    b4 = (s[25] << 11) | (s[24] >>> 21);\n    b5 = (s[24] << 11) | (s[25] >>> 21);\n    b36 = (s[34] << 15) | (s[35] >>> 17);\n    b37 = (s[35] << 15) | (s[34] >>> 17);\n    b18 = (s[45] << 29) | (s[44] >>> 3);\n    b19 = (s[44] << 29) | (s[45] >>> 3);\n    b10 = (s[6] << 28) | (s[7] >>> 4);\n    b11 = (s[7] << 28) | (s[6] >>> 4);\n    b42 = (s[17] << 23) | (s[16] >>> 9);\n    b43 = (s[16] << 23) | (s[17] >>> 9);\n    b24 = (s[26] << 25) | (s[27] >>> 7);\n    b25 = (s[27] << 25) | (s[26] >>> 7);\n    b6 = (s[36] << 21) | (s[37] >>> 11);\n    b7 = (s[37] << 21) | (s[36] >>> 11);\n    b38 = (s[47] << 24) | (s[46] >>> 8);\n    b39 = (s[46] << 24) | (s[47] >>> 8);\n    b30 = (s[8] << 27) | (s[9] >>> 5);\n    b31 = (s[9] << 27) | (s[8] >>> 5);\n    b12 = (s[18] << 20) | (s[19] >>> 12);\n    b13 = (s[19] << 20) | (s[18] >>> 12);\n    b44 = (s[29] << 7) | (s[28] >>> 25);\n    b45 = (s[28] << 7) | (s[29] >>> 25);\n    b26 = (s[38] << 8) | (s[39] >>> 24);\n    b27 = (s[39] << 8) | (s[38] >>> 24);\n    b8 = (s[48] << 14) | (s[49] >>> 18);\n    b9 = (s[49] << 14) | (s[48] >>> 18);\n\n    s[0] = b0 ^ (~b2 & b4);\n    s[1] = b1 ^ (~b3 & b5);\n    s[10] = b10 ^ (~b12 & b14);\n    s[11] = b11 ^ (~b13 & b15);\n    s[20] = b20 ^ (~b22 & b24);\n    s[21] = b21 ^ (~b23 & b25);\n    s[30] = b30 ^ (~b32 & b34);\n    s[31] = b31 ^ (~b33 & b35);\n    s[40] = b40 ^ (~b42 & b44);\n    s[41] = b41 ^ (~b43 & b45);\n    s[2] = b2 ^ (~b4 & b6);\n    s[3] = b3 ^ (~b5 & b7);\n    s[12] = b12 ^ (~b14 & b16);\n    s[13] = b13 ^ (~b15 & b17);\n    s[22] = b22 ^ (~b24 & b26);\n    s[23] = b23 ^ (~b25 & b27);\n    s[32] = b32 ^ (~b34 & b36);\n    s[33] = b33 ^ (~b35 & b37);\n    s[42] = b42 ^ (~b44 & b46);\n    s[43] = b43 ^ (~b45 & b47);\n    s[4] = b4 ^ (~b6 & b8);\n    s[5] = b5 ^ (~b7 & b9);\n    s[14] = b14 ^ (~b16 & b18);\n    s[15] = b15 ^ (~b17 & b19);\n    s[24] = b24 ^ (~b26 & b28);\n    s[25] = b25 ^ (~b27 & b29);\n    s[34] = b34 ^ (~b36 & b38);\n    s[35] = b35 ^ (~b37 & b39);\n    s[44] = b44 ^ (~b46 & b48);\n    s[45] = b45 ^ (~b47 & b49);\n    s[6] = b6 ^ (~b8 & b0);\n    s[7] = b7 ^ (~b9 & b1);\n    s[16] = b16 ^ (~b18 & b10);\n    s[17] = b17 ^ (~b19 & b11);\n    s[26] = b26 ^ (~b28 & b20);\n    s[27] = b27 ^ (~b29 & b21);\n    s[36] = b36 ^ (~b38 & b30);\n    s[37] = b37 ^ (~b39 & b31);\n    s[46] = b46 ^ (~b48 & b40);\n    s[47] = b47 ^ (~b49 & b41);\n    s[8] = b8 ^ (~b0 & b2);\n    s[9] = b9 ^ (~b1 & b3);\n    s[18] = b18 ^ (~b10 & b12);\n    s[19] = b19 ^ (~b11 & b13);\n    s[28] = b28 ^ (~b20 & b22);\n    s[29] = b29 ^ (~b21 & b23);\n    s[38] = b38 ^ (~b30 & b32);\n    s[39] = b39 ^ (~b31 & b33);\n    s[48] = b48 ^ (~b40 & b42);\n    s[49] = b49 ^ (~b41 & b43);\n\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nconst keccak = (bits: any) => (str: string) => {\n  let msg;\n  if (str.slice(0, 2) === '0x') {\n    msg = [];\n    for (let i = 2, l = str.length; i < l; i += 2)\n      msg.push(parseInt(str.slice(i, i + 2), 16));\n  } else {\n    msg = str;\n  }\n  return update(Keccak(bits), msg);\n};\n\nexport const keccak256 = keccak(256);\nexport const keccak512 = keccak(512);\nexport const keccak256s = keccak(256);\nexport const keccak512s = keccak(512);\n","const BN = require('bn.js');\nconst Bytes = require('./bytes');\n\nconst fromBN = (bn: any) => '0x' + bn.toString('hex');\n\nconst toBN = (str: string) => new BN(str.slice(2), 16);\n\nconst fromString = (str: string) => {\n  const bn =\n    '0x' +\n    (str.slice(0, 2) === '0x'\n      ? new BN(str.slice(2), 16)\n      : new BN(str, 10)\n    ).toString('hex');\n  return bn === '0x0' ? '0x' : bn;\n};\n\nconst toEther = (wei: string) =>\n  toNumber(div(wei, fromString('10000000000'))) / 100000000;\n\nconst fromEther = (eth: number) =>\n  mul(fromNumber(Math.floor(eth * 100000000)), fromString('10000000000'));\n\nconst toString = (a: string) => toBN(a).toString(10);\n\nconst fromNumber = (a: any) =>\n  typeof a === 'string'\n    ? /^0x/.test(a)\n      ? a\n      : '0x' + a\n    : '0x' + new BN(a).toString('hex');\n\nconst toNumber = (a: any) => toBN(a).toNumber();\n\nconst toUint256 = (a: any) => Bytes.pad(32, a);\n\nconst bin = (method: string) => (a: string, b: string) =>\n  fromBN(toBN(a)[method](toBN(b)));\n\nconst add = bin('add');\nconst mul = bin('mul');\nconst div = bin('div');\nconst sub = bin('sub');\n\nexport {\n  toString,\n  fromString,\n  toNumber,\n  fromNumber,\n  toEther,\n  fromEther,\n  toUint256,\n  add,\n  mul,\n  div,\n  sub,\n};\n","const at = (bytes: string, index: number) =>\n  parseInt(bytes.slice(index * 2 + 2, index * 2 + 4), 16);\n\nconst random = (bytes: number) => {\n  let rnd;\n  if (\n    typeof window !== 'undefined' &&\n    window.crypto &&\n    window.crypto.getRandomValues\n  )\n    rnd = window.crypto.getRandomValues(new Uint8Array(bytes));\n  else if (typeof require !== 'undefined')\n    rnd = require('crypto').randomBytes(bytes);\n  else throw new Error('Safe random numbers not available.');\n  let hex = '0x';\n  for (let i = 0; i < bytes; ++i) hex += ('00' + rnd[i].toString(16)).slice(-2);\n  return hex;\n};\n\nconst length = (a: string | any[]) => (a.length - 2) / 2;\n\nconst flatten = (a: any[]) => '0x' + a.reduce((r, s) => r + s.slice(2), '');\n\nconst slice = (i: number, j: number, bs: string) =>\n  '0x' + bs.slice(i * 2 + 2, j * 2 + 2);\n\nconst reverse = (hex: string) => {\n  let rev = '0x';\n  for (let i = 0, l = length(hex); i < l; ++i) {\n    rev += hex.slice((l - i) * 2, (l - i + 1) * 2);\n  }\n  return rev;\n};\n\nconst pad = (l: number, hex: string): string =>\n  hex.length === l * 2 + 2 ? hex : pad(l, `0x0${hex.slice(2)}`);\n\nconst padRight = (l: number, hex: string): string =>\n  hex.length === l * 2 + 2 ? hex : padRight(l, hex + '0');\n\nconst toArray = (hex: string) => {\n  const arr = [];\n  for (let i = 2, l = hex.length; i < l; i += 2)\n    arr.push(parseInt(hex.slice(i, i + 2), 16));\n  return arr;\n};\n\nconst fromArray = (arr: any[]) => {\n  let hex = '0x';\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    const b = arr[i];\n    hex += (b < 16 ? '0' : '') + b.toString(16);\n  }\n  return hex;\n};\n\nconst toUint8Array = (hex: string) => new Uint8Array(toArray(hex));\n\nconst fromUint8Array = (arr: any) => fromArray([].slice.call(arr, 0));\n\nconst fromNumber = (num: number) => {\n  const hex = num.toString(16);\n  return hex.length % 2 === 0 ? '0x' + hex : '0x0' + hex;\n};\n\nconst toNumber = (hex: string) => parseInt(hex.slice(2), 16);\n\nconst concat = (a: string, b: string) => a.concat(b.slice(2));\n\nconst fromNat = (bn: any) => {\n  return bn === '0x0' ? '0x' : bn.length % 2 === 0 ? bn : '0x0' + bn.slice(2);\n};\n\nconst toNat = (bn: string) => (bn[2] === '0' ? '0x' + bn.slice(3) : bn);\n\nconst fromAscii = (ascii: string) => {\n  let hex = '0x';\n  for (let i = 0; i < ascii.length; ++i)\n    hex += ('00' + ascii.charCodeAt(i).toString(16)).slice(-2);\n  return hex;\n};\n\nconst toAscii = (hex: string) => {\n  let ascii = '';\n  for (let i = 2; i < hex.length; i += 2)\n    ascii += String.fromCharCode(parseInt(hex.slice(i, i + 2), 16));\n  return ascii;\n};\n\n// From https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\nconst fromString = (s: string) => {\n  const makeByte = (uint8: number) => {\n    const b = uint8.toString(16);\n    return b.length < 2 ? '0' + b : b;\n  };\n  let bytes = '0x';\n  for (let ci = 0; ci !== s.length; ci++) {\n    let c = s.charCodeAt(ci);\n    if (c < 128) {\n      bytes += makeByte(c);\n      continue;\n    }\n    if (c < 2048) {\n      bytes += makeByte((c >> 6) | 192);\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci === s.length) return null;\n        const c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) return null;\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes += makeByte((c >> 18) | 240);\n        bytes += makeByte(((c >> 12) & 63) | 128);\n      } else {\n        // c <= 0xffff\n        bytes += makeByte((c >> 12) | 224);\n      }\n      bytes += makeByte(((c >> 6) & 63) | 128);\n    }\n    bytes += makeByte((c & 63) | 128);\n  }\n  return bytes;\n};\n\nconst toString = (bytes: string) => {\n  let s = '';\n  let i = 0;\n  const l = length(bytes);\n  while (i < l) {\n    let c = at(bytes, i++);\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= l) return null;\n        c = ((c & 31) << 6) | (at(bytes, i) & 63);\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= l) return null;\n        c =\n          ((c & 15) << 12) | ((at(bytes, i) & 63) << 6) | (at(bytes, ++i) & 63);\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= l) return null;\n        c =\n          ((c & 7) << 18) |\n          ((at(bytes, i) & 63) << 12) |\n          ((at(bytes, ++i) & 63) << 6) |\n          (at(bytes, ++i) & 63);\n      } else return null;\n      ++i;\n    }\n    if (c <= 0xffff) s += String.fromCharCode(c);\n    else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode((c >> 10) | 0xd800);\n      s += String.fromCharCode((c & 0x3ff) | 0xdc00);\n    } else return null;\n  }\n  return s;\n};\n\nexport {\n  random,\n  length,\n  concat,\n  flatten,\n  slice,\n  reverse,\n  pad,\n  padRight,\n  fromAscii,\n  toAscii,\n  fromString,\n  toString,\n  fromNumber,\n  toNumber,\n  fromNat,\n  toNat,\n  fromArray,\n  toArray,\n  fromUint8Array,\n  toUint8Array,\n};\n\nexport default {\n  random,\n  length,\n  concat,\n  flatten,\n  slice,\n  reverse,\n  pad,\n  padRight,\n  fromAscii,\n  toAscii,\n  fromString,\n  toString,\n  fromNumber,\n  toNumber,\n  fromNat,\n  toNat,\n  fromArray,\n  toArray,\n  fromUint8Array,\n  toUint8Array,\n};\n","import { keccak256 } from 'js-sha3';\nimport BN from 'bn.js';\nimport utf8 from 'utf8';\nimport numberToBN from 'number-to-bn';\nimport { isString, isNumber, isBoolean, isObject } from 'lodash';\nimport { intToBuffer } from './number';\nimport { isAddress } from './account';\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nexport const isHexString = (value: string, length?: number) => {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const isHexStrict = (hex: string) => {\n  return (isString(hex) || isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n\nexport const isHexPrefixed = (str: string) => {\n  if (typeof str !== 'string') {\n    return false;\n  }\n\n  return str.slice(0, 2) === '0x';\n};\n\nexport const stripHexPrefix = (str: string) =>\n  isHexPrefixed(str) ? str.slice(2) : str;\n\nconst toBuffer = (v: any) => {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (isHexString(v)) {\n        v = Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return v;\n};\n\nexport const padToEven = (value: string) => {\n  if (typeof value !== 'string') {\n    throw new Error(\n      `while padding to even, value must be string, is currently [${typeof value}], while padToEven.`\n    );\n  }\n\n  if (value.length % 2) {\n    return `0${value}`;\n  }\n\n  return value;\n};\n\nconst zeros = (bytes: number) => Buffer.allocUnsafe(bytes).fill(0);\n\nconst setLength = (msg: any, length: number, right: boolean) => {\n  const buf = zeros(length);\n  msg = toBuffer(msg);\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n    return msg.slice(-length);\n  }\n};\n\nexport const setLengthRight = (msg: any, length: number) => {\n  return setLength(msg, length, true);\n};\n\nconst SHA3_NULL_S =\n  '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n\nexport const sha3 = (value: any) => {\n  if (isBN(value)) {\n    value = value.toString();\n  }\n\n  if (isHexStrict(value) && /^0x/i.test(value.toString())) {\n    value = hexToBytes(value);\n  }\n\n  const returnValue = keccak256(value); // jshint ignore:line\n\n  if (returnValue === SHA3_NULL_S) {\n    return null;\n  } else {\n    return returnValue;\n  }\n};\n\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nconst hexToBytes = (hex: any) => {\n  hex = hex.toString(16);\n\n  if (!isHexStrict(hex)) {\n    throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n  }\n\n  hex = hex.replace(/^0x/i, '');\n\n  const bytes = [];\n  for (let c = 0; c < hex.length; c += 2) {\n    bytes.push(parseInt(hex.substr(c, 2), 16));\n  }\n\n  return bytes;\n};\n\nexport const isBN = (object: any) =>\n  object instanceof BN ||\n  (object && object.constructor && object.constructor.name === 'BN');\n\nconst isBigNumber = (object: any) =>\n  object &&\n  (object instanceof BN ||\n    (object.constructor && object.constructor.name === 'BigNumber'));\n\nexport const utf8ToHex = (str: string) => {\n  str = utf8.encode(str);\n  let hex = '';\n\n  // remove \\u0000 padding from either side\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str\n    .split('')\n    .reverse()\n    .join('');\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str\n    .split('')\n    .reverse()\n    .join('');\n\n  for (let i = 0; i < str.length; i++) {\n    const code = str.charCodeAt(i);\n    // if (code !== 0) {\n    const n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n    // }\n  }\n\n  return '0x' + hex;\n};\n\nexport const toBN = (number: any) => {\n  try {\n    return numberToBN(number);\n  } catch (e) {\n    throw new Error(e + ' Given value: \"' + number + '\"');\n  }\n};\n\nexport const numberToHex = (value: any) => {\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (!isFinite(value) && !isHexStrict(value)) {\n    throw new Error('Given input \"' + value + '\" is not a number.');\n  }\n\n  const number = toBN(value);\n  const result = number.toString(16);\n\n  return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n\nexport const toHex = (value: any, returnType = false) => {\n  /*jshint maxcomplexity: false */\n\n  if (isAddress(value)) {\n    return returnType\n      ? 'address'\n      : '0x' + value.toLowerCase().replace(/^0x/i, '');\n  }\n\n  if (isBoolean(value)) {\n    return returnType ? 'bool' : value ? '0x01' : '0x00';\n  }\n\n  if (isObject(value) && !isBigNumber(value) && !isBN(value)) {\n    return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n  }\n\n  // if its a negative number, pass it through numberToHex\n  if (isString(value)) {\n    if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n      return returnType ? 'int256' : numberToHex(value);\n    } else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n      return returnType ? 'bytes' : value;\n    }\n  }\n\n  return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n\nexport const removeTrailingZeros = (value: any) => {\n  const regEx1 = /^[0]+/;\n  const regEx2 = /[0]+$/;\n  const regEx3 = /[.]$/;\n\n  const valueInString = value.toString();\n\n  let after = valueInString.replace(regEx1, ''); // Remove leading 0's\n\n  if (after.indexOf('.') > -1) {\n    after = after.replace(regEx2, ''); // Remove trailing 0's\n  }\n  after = after.replace(regEx3, ''); // Remove trailing decimal\n\n  if (after.indexOf('.') === 0) {\n    after = '0' + after;\n  }\n  return after ? after : 0;\n};\n\nexport const numberToString = (arg: any) => {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error(\n        `while converting number to string, invalid number value '${arg}', should be a number matching (^-?[0-9.]+).`\n      );\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (\n    typeof arg === 'object' &&\n    arg.toString &&\n    (arg.toTwos || arg.dividedToIntegerBy)\n  ) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      return arg.toString(10);\n    }\n  }\n  throw new Error(\n    `while converting number to string, invalid number value '${arg}' type ${typeof arg}.`\n  );\n};\n","import elliptic from 'elliptic';\nimport { keccak256 } from './hash';\nimport { fromString } from './nat';\nimport Bytes from './bytes';\nimport { sha3 } from './string';\n\nconst secp256k1 = new elliptic.ec('secp256k1');\n\nexport const toChecksum = (address: string) => {\n  if (typeof address === 'undefined') return '';\n\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    throw new Error(\n      'Given address \"' + address + '\" is not a valid Kardiachain address.'\n    );\n  }\n\n  address = address.toLowerCase().replace(/^0x/i, '');\n  const addressHash = keccak256(address).replace(/^0x/i, '');\n  let checksumAddress = '0x';\n  for (let i = 0; i < address.length; i++)\n    checksumAddress +=\n      parseInt(addressHash[i], 16) > 7 ? address[i].toUpperCase() : address[i];\n  return checksumAddress;\n};\n\nexport const checkAddressChecksum = (address: string) => {\n  try {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    const sha3Result = sha3(address.toLowerCase());\n    if (sha3Result === null) return false;\n    const addressHash = sha3Result.replace(/^0x/i, '');\n    for (let i = 0; i < 40; i++) {\n      // the nth letter should be uppercase if the nth digit of casemap is 1\n      if (\n        (parseInt(addressHash[i], 16) > 7 &&\n          address[i].toUpperCase() !== address[i]) ||\n        (parseInt(addressHash[i], 16) <= 7 &&\n          address[i].toLowerCase() !== address[i])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const isAddress = (address: string) => {\n  // check if it has the basic requirements of an address\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false;\n    // If it's ALL lowercase or ALL upppercase\n  } else if (\n    /^(0x|0X)?[0-9a-f]{40}$/.test(address) ||\n    /^(0x|0X)?[0-9A-F]{40}$/.test(address)\n  ) {\n    return true;\n    // Otherwise check each case\n  } else {\n    return checkAddressChecksum(address);\n  }\n};\n\nexport const fromPrivate = (privateKey: string) => {\n  const buffer = Buffer.from(privateKey.slice(2), 'hex');\n  const ecKey = secp256k1.keyFromPrivate(buffer);\n  const publicKey = '0x' + ecKey.getPublic(false, 'hex').slice(2);\n  const publicHash = keccak256(publicKey);\n  const address = toChecksum('0x' + publicHash.slice(-40));\n\n  return {\n    address: address,\n    privateKey: privateKey,\n  };\n};\n\nconst encodeSignature = ([v, r, s]: any[]) => Bytes.flatten([r, s, v]);\n\nexport const decodeSignature = (hex: string) => [\n  Bytes.slice(64, Bytes.length(hex), hex),\n  Bytes.slice(0, 32, hex),\n  Bytes.slice(32, 64, hex),\n];\n\nconst makeSigner = (addToV: number) => (hash: string, privateKey: string) => {\n  const signature = secp256k1\n    .keyFromPrivate(Buffer.from(privateKey.slice(2), 'hex'))\n    .sign(Buffer.from(hash.slice(2), 'hex'), { canonical: true });\n  let number = 0;\n  if (signature) number = signature.recoveryParam as number;\n  return encodeSignature([\n    fromString(Bytes.fromNumber(addToV + number)),\n    Bytes.pad(32, Bytes.fromNat('0x' + signature.r.toString(16))),\n    Bytes.pad(32, Bytes.fromNat('0x' + signature.s.toString(16))),\n  ]);\n};\n\nexport const trimLeadingZero = (hex: string) => {\n  while (hex && hex.startsWith('0x0')) {\n    hex = '0x' + hex.slice(3);\n  }\n  return hex;\n};\n\nexport const makeEven = (hex: string) => {\n  if (hex.length % 2 === 1) {\n    hex = hex.replace('0x', '0x0');\n  }\n  return hex;\n};\n\nexport const sign = makeSigner(27);\n","import { Client } from '@open-rpc/client-js';\nimport * as EthUtil from 'ethereumjs-util';\nimport EtherWallet from 'ethereumjs-wallet';\nimport { ethers } from 'ethers';\nimport { isAddress } from '../util/account';\n\ninterface KardiaAccountProps {\n  client: Client;\n}\n\ninterface BlockQuery {\n  blockHash?: string;\n  blockHeight?: number;\n}\n\nclass KardiaAccount {\n  private _rpcClient: Client;\n  constructor({ client }: KardiaAccountProps) {\n    this._rpcClient = client;\n  }\n\n  public async getBalance(address: string, options?: BlockQuery) {\n    const params: any[] = [address];\n\n    if (options && options.blockHash) {\n      params.push(options.blockHash);\n    } else if (options && options.blockHeight) {\n      params.push(options.blockHeight);\n    } else {\n      params.push('latest');\n    }\n\n    return await this._rpcClient.request({\n      method: 'account_balance',\n      params,\n    });\n  }\n\n  public async getNonce(address: string) {\n    return await this._rpcClient.request({\n      method: 'account_nonce',\n      params: [address],\n    });\n  }\n\n  // Static utility method\n\n  public static getWalletFromPK(privateKey: string) {\n    const privateKeyBuffer = EthUtil.toBuffer(privateKey);\n    const wallet = EtherWallet.fromPrivateKey(privateKeyBuffer);\n    const addressStr = wallet.getChecksumAddressString();\n    return {\n      address: addressStr,\n      privateKey,\n      balance: 0,\n    };\n  }\n\n  public static async getWalletFromMnemonic(\n    mnemonic: string\n  ): Promise<Record<string, any> | boolean> {\n    const wallet = ethers.Wallet.fromMnemonic(mnemonic.trim());\n    const privateKey = wallet.privateKey;\n    const addressStr = wallet.address;\n    return {\n      address: addressStr,\n      privateKey,\n      balance: 0,\n    };\n  }\n\n  public static isAddress(address: string) {\n    return isAddress(address);\n  }\n\n  public static generateWallet() {\n    const wallet = ethers.Wallet.createRandom();\n    const privateKey = wallet.privateKey;\n    const addressStr = wallet.address;\n\n    return {\n      address: addressStr,\n      privateKey,\n      balance: 0,\n    };\n  }\n}\n\nexport default KardiaAccount;\n","import numberToBN from 'number-to-bn';\nimport { numberToString, removeTrailingZeros } from './string';\nimport BN from 'bn.js';\n\n// BN zero\nconst zero = new BN(0);\nconst negative1 = new BN(-1);\n\nconst unitMap = {\n  hydro: '1',\n  oxy: '1000000000',\n  kai: '1000000000000000000',\n};\n\nconst getValueOfUnit = (unitInput: string) => {\n  const unit = unitInput ? unitInput.toLowerCase() : 'kai';\n  const unitValue = (unitMap as any)[unit];\n\n  if (typeof unitValue !== 'string') {\n    throw new Error(\n      `The unit provided ${unitInput} doesn't exists, please use the one of the following units ${JSON.stringify(\n        unitMap,\n        null,\n        2\n      )}`\n    );\n  }\n\n  return new BN(unitValue, 10);\n};\n\n/**\n * Using for convert from hydro unit to OXY or KAI\n * @return value type: string\n *\n * @param input\n * @param unit\n *\n */\nexport const fromHydro = (input: any, unit: 'hydro' | 'oxy' | 'kai') => {\n  try {\n    let oxy = numberToBN(input);\n    const negative = oxy.lt(zero);\n    const base = getValueOfUnit(unit);\n    const baseLength = (unitMap as any)[unit].length - 1 || 1;\n\n    if (negative) {\n      oxy = oxy.mul(negative1);\n    }\n\n    let fraction = oxy.mod(base).toString(10);\n\n    while (fraction.length < baseLength) {\n      fraction = `0${fraction}`;\n    }\n\n    const whole = oxy.div(base).toString(10);\n    let value = `${whole}${fraction === '0' ? '' : `.${fraction}`}`;\n\n    if (negative) {\n      value = `-${value}`;\n    }\n\n    return removeTrailingZeros(value);\n  } catch (error) {\n    throw new Error(\n      `While converting number ${input} to ${unit}, ${error.message}`\n    );\n  }\n};\n\n/**\n * Using for convert OXY or KAI unit to Hydro unit\n * @return value type: string\n *\n * @param input\n * @param unit\n */\nexport const toHydro = (input: any, unit: any) => {\n  try {\n    let kai = numberToString(input);\n\n    const base = getValueOfUnit(unit);\n    const baseLength = (unitMap as any)[unit].length - 1 || 1;\n\n    // Is it negative?\n    const negative = kai.substring(0, 1) === '-';\n    if (negative) {\n      kai = kai.substring(1);\n    }\n\n    if (kai === '.') {\n      throw new Error(\n        `While converting number ${input} to hydro, invalid value`\n      );\n    }\n\n    // Split it into a whole and fractional part\n    const comps = kai.split('.');\n    if (comps.length > 2) {\n      throw new Error(\n        `While converting number ${input} to hydro,  too many decimal points`\n      );\n    }\n\n    let whole = comps[0],\n      fraction = comps[1];\n\n    if (!whole) {\n      whole = '0';\n    }\n    if (!fraction) {\n      fraction = '0';\n    }\n    if (fraction.length > baseLength) {\n      throw new Error(\n        `While converting number ${input} to hydro, too many decimal places`\n      );\n    }\n\n    while (fraction.length < baseLength) {\n      fraction += '0';\n    }\n\n    whole = new BN(whole);\n    fraction = new BN(fraction);\n    let hydro = whole.mul(base).add(fraction);\n\n    if (negative) {\n      hydro = hydro.mul(negative1);\n    }\n\n    return hydro.toString(10);\n  } catch (error) {\n    throw new Error(\n      `While converting number ${input} to hydro, ${error.message}`\n    );\n  }\n};\n","import { Client } from '@open-rpc/client-js';\nimport { fromHydro, toHydro } from '../util/amount';\ninterface KAIProps {\n  client: Client;\n}\n\nclass KAIChain {\n  private _rpcClient: Client;\n  constructor({ client }: KAIProps) {\n    this._rpcClient = client;\n  }\n\n  public async getBlockNumber() {\n    return await this._rpcClient.request({\n      method: 'kai_blockNumber',\n      params: [],\n    });\n  }\n\n  public async isValidator(address: string) {\n    try {\n      await this._rpcClient.request({\n        method: 'kai_validator',\n        params: [address, false],\n      });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public async getValidators(withDelegators: boolean = false) {\n    return await this._rpcClient.request({\n      method: 'kai_validators',\n      params: [withDelegators],\n    });\n  }\n\n  public async getBlockByBlockNumber(blockNumber: number) {\n    if (blockNumber < 0) {\n      throw new Error('Invalid block number');\n    }\n    return await this._rpcClient.request({\n      method: 'kai_getBlockByNumber',\n      params: [blockNumber],\n    });\n  }\n\n  public async getBlockByHash(blockHash: string) {\n    return await this._rpcClient.request({\n      method: 'kai_getBlockByHash',\n      params: [blockHash],\n    });\n  }\n\n  public async getBlockHeaderByBlockNumber(blockNumber: number) {\n    if (blockNumber < 0) {\n      throw new Error('Invalid block number');\n    }\n    return await this._rpcClient.request({\n      method: 'kai_getBlockHeaderByNumber',\n      params: [blockNumber],\n    });\n  }\n\n  public async getBlockHeaderByHash(blockHash: string) {\n    return await this._rpcClient.request({\n      method: 'kai_getBlockHeaderByHash',\n      params: [blockHash],\n    });\n  }\n\n  public async newFilter(\n    fromBlock?: 'latest' | number,\n    toBlock?: 'latest' | number,\n    address?: string,\n    topics?: []\n  ) {\n    return await this._rpcClient.request({\n      method: 'kai_newFilter',\n      params: [\n        {\n          fromBlock: fromBlock,\n          toBlock: toBlock,\n          address: address,\n          topics: topics,\n        },\n      ],\n    });\n  }\n\n  public async newBlockFilter() {\n    return await this._rpcClient.request({\n      method: 'kai_newBlockFilter',\n      params: [],\n    });\n  }\n\n  public async uninstallFilter(filterId: string) {\n    return await this._rpcClient.request({\n      method: 'kai_uninstallFilter',\n      params: [filterId],\n    });\n  }\n\n  public async getFilterChanges(filterId: string) {\n    return await this._rpcClient.request({\n      method: 'kai_getFilterChanges',\n      params: [filterId],\n    });\n  }\n\n  public async getFilterLogs(filterId: string) {\n    return await this._rpcClient.request({\n      method: 'kai_getFilterLogs',\n      params: [filterId],\n    });\n  }\n\n  public async getLogs(\n    fromBlock?: 'latest' | number,\n    toBlock?: 'latest' | number,\n    address?: string,\n    topics?: [],\n    blockhash?: any\n  ) {\n    return await this._rpcClient.request({\n      method: 'kai_getLogs',\n      params: [\n        {\n          fromBlock: fromBlock,\n          toBlock: toBlock,\n          address: address,\n          topics: topics,\n          blockhash: blockhash,\n        },\n      ],\n    });\n  }\n\n  // Static utility method\n\n  public static KAIFromHydro(hydroValue: any): number {\n    return fromHydro(hydroValue, 'kai');\n  }\n\n  public static HydroFromKAI(kaiValue: any) {\n    return toHydro(kaiValue, 'kai');\n  }\n}\n\nexport default KAIChain;\n","// The RLP format\n// Serialization and deserialization for the BytesTree type, under the following grammar:\n// | First byte | Meaning                                                                    |\n// | ---------- | -------------------------------------------------------------------------- |\n// | 0   to 127 | HEX(leaf)                                                                  |\n// | 128 to 183 | HEX(length_of_leaf + 128) + HEX(leaf)                                      |\n// | 184 to 191 | HEX(length_of_length_of_leaf + 128 + 55) + HEX(length_of_leaf) + HEX(leaf) |\n// | 192 to 247 | HEX(length_of_node + 192) + HEX(node)                                      |\n// | 248 to 255 | HEX(length_of_length_of_node + 128 + 55) + HEX(length_of_node) + HEX(node) |\n\nconst encode = (tree: any[]) => {\n  const padEven = (str: any) => (str.length % 2 === 0 ? str : '0' + str);\n\n  const uint = (num: any) => padEven(num.toString(16));\n\n  const length = (len: number, add: any) =>\n    len < 56\n      ? uint(add + len)\n      : uint(add + uint(len).length / 2 + 55) + uint(len);\n\n  const dataTree = (tree: any): any => {\n    if (typeof tree === 'string') {\n      const hex = tree.slice(2);\n      const pre =\n        hex.length !== 2 || hex >= '80' ? length(hex.length / 2, 128) : '';\n      return pre + hex;\n    } else {\n      const hex = tree.map(dataTree).join('');\n      const pre = length(hex.length / 2, 192);\n      return pre + hex;\n    }\n  };\n\n  return '0x' + dataTree(tree);\n};\n\nconst decode = (hex: string) => {\n  let i = 2;\n\n  const parseTree = (): any => {\n    if (i >= hex.length) throw new Error('');\n    const head = hex.slice(i, i + 2);\n    return head < '80'\n      ? ((i += 2), '0x' + head)\n      : head < 'c0'\n      ? parseHex()\n      : parseList();\n  };\n\n  const parseLength = () => {\n    const len = parseInt(hex.slice(i, (i += 2)), 16) % 64;\n    return len < 56 ? len : parseInt(hex.slice(i, (i += (len - 55) * 2)), 16);\n  };\n\n  const parseHex = () => {\n    const len = parseLength();\n    return '0x' + hex.slice(i, (i += len * 2));\n  };\n\n  const parseList = () => {\n    const lim = parseLength() * 2 + i;\n    const list = [];\n    while (i < lim) list.push(parseTree());\n    return list;\n  };\n\n  try {\n    return parseTree();\n  } catch (e) {\n    return [];\n  }\n};\n\nexport { encode, decode };\n","export const sleep = (ms: number) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n","import { Client, HTTPTransport, RequestManager } from '@open-rpc/client-js';\nimport {\n  decodeSignature,\n  makeEven,\n  sign,\n  trimLeadingZero,\n} from '../util/account';\nimport { fromNat } from '../util/bytes';\n// import {keccak256} from 'js-sha3';\nimport { keccak256 } from '../util/hash';\nimport { decode, encode } from '../util/rlp';\nimport { isHexStrict, toHex } from '../util/string';\nimport { sleep } from '../util/time';\nimport { DEFAULT_GAS_PRICE, WAIT_TIMEOUT } from './config';\n\ninterface KardiaTransactionProps {\n  client?: Client;\n  provider?: string;\n}\n\ninterface TxParams {\n  nonce: any;\n  to: string;\n  gasPrice: any;\n  gas: any;\n  value: string;\n  data: string;\n}\n\nclass KardiaTransaction {\n  private _rpcClient: Client;\n  constructor({ client, provider }: KardiaTransactionProps) {\n    if (client) {\n      this._rpcClient = client;\n    } else if (provider) {\n      const transport = new HTTPTransport(provider);\n      this._rpcClient = new Client(new RequestManager([transport]));\n    } else {\n      throw new Error('Either [client] or [provider] must be provided');\n    }\n  }\n\n  public async getTransaction(txHash: string) {\n    return await this._rpcClient.request({\n      method: 'tx_getTransaction',\n      params: [txHash],\n    });\n  }\n\n  public async getPendingTransaction() {\n    return await this._rpcClient.request({\n      method: 'tx_pendingTransactions',\n      params: [],\n    });\n  }\n\n  public async getTransactionReceipt(txHash: string) {\n    return await this._rpcClient.request({\n      method: 'tx_getTransactionReceipt',\n      params: [txHash],\n    });\n  }\n\n  public async signTransaction(tx: TxParams, privateKey: string) {\n    const _privateKey = `0x${privateKey.replace('0x', '')}`;\n    if (!tx.gas) {\n      throw new Error('\"gas\" is missing');\n    }\n\n    if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0) {\n      throw new Error('Gas, gasPrice, nonce is lower than 0');\n    }\n\n    const transaction = {\n      nonce: tx.nonce,\n      gasPrice: tx.gasPrice,\n      gas: tx.gas,\n      to: '0x' + tx.to.toLowerCase().replace('0x', ''),\n      value: tx.value,\n      data: '0x' + tx.data.toLowerCase().replace('0x', ''),\n    };\n\n    const rlpEncoded = encode([\n      fromNat(transaction.nonce),\n      fromNat(transaction.gasPrice),\n      fromNat(transaction.gas),\n      transaction.to.toLowerCase(),\n      fromNat(transaction.value),\n      transaction.data,\n    ]);\n    const hash = keccak256(rlpEncoded);\n    const signature = sign(hash, _privateKey);\n    const decodeSign = decodeSignature(signature);\n\n    const rawTx = decode(rlpEncoded).concat(decodeSign);\n    rawTx[6] = makeEven(trimLeadingZero(decodeSign[0]));\n    rawTx[7] = makeEven(trimLeadingZero(decodeSign[1]));\n    rawTx[8] = makeEven(trimLeadingZero(decodeSign[2]));\n\n    const rawTransaction = encode(rawTx);\n\n    const values = decode(rawTransaction);\n    const result = {\n      messageHash: hash,\n      v: trimLeadingZero(values[6].toString()),\n      r: trimLeadingZero(values[7].toString()),\n      s: trimLeadingZero(values[8].toString()),\n      rawTransaction: rawTransaction,\n    };\n    return result;\n  }\n\n  public generateTransaction({\n    // Receiver alias\n    receiver = '0x',\n    to = '0x',\n    // Amount alias\n    amount = '0x0',\n    value = '0x0',\n    nonce = '0x0',\n    gasPrice = '0xff',\n    // Gas limit alias\n    gas = '0xff',\n    gasLimit = '0xff',\n    data = '0x',\n  }: any): TxParams {\n    const _gasLimit = gas === '0xff' ? gasLimit : gas;\n    const _value = amount === '0x0' ? value : amount;\n    const _receiver = receiver === '0x' ? to : receiver;\n\n    return {\n      nonce: isHexStrict(nonce) ? nonce : toHex(nonce),\n      to: _receiver,\n      gasPrice: isHexStrict(gasPrice) ? gasPrice : toHex(gasPrice),\n      gas: isHexStrict(_gasLimit) ? _gasLimit : toHex(_gasLimit),\n      value: isHexStrict(_value) ? _value : toHex(_value),\n      data: '0x' + data.toLowerCase().replace(/^0x/i, ''),\n    };\n  }\n\n  /**\n   *\n   * @param data transaction params\n   * @param privateKey Private key used to sign transaction\n   * @param waitUntilMined wait for transaction to complete or not\n   * @param waitTimeOut Time (in milliseconds) to wait for transaction to complete\n   */\n  public async sendTransaction(\n    data: any,\n    privateKey: string,\n    waitUntilMined: boolean = false,\n    waitTimeOut: number = 0\n  ) {\n    if (!data.gas) {\n      const estimatedGas = await this.estimateGas(data, data.data);\n      data.gas = estimatedGas * 10;\n    }\n    const generatedTx = await this.generateTransaction(data);\n    const signedTx = await this.signTransaction(generatedTx, privateKey);\n\n    const txHash = await this._rpcClient.request({\n      method: 'tx_sendRawTransaction',\n      params: [signedTx.rawTransaction],\n    });\n    if (!waitUntilMined) return txHash;\n\n    const _waitTimeOut = waitTimeOut || WAIT_TIMEOUT;\n    const breakTimeout = Date.now() + _waitTimeOut;\n    while (Date.now() < breakTimeout) {\n      try {\n        const receipt = await this.getTransactionReceipt(txHash);\n        if (receipt) {\n          return receipt;\n        } else {\n          await sleep(1000);\n        }\n      } catch (err) {\n        await sleep(1000);\n      }\n    }\n\n    throw new Error(`Timeout: cannot get receipt after ${WAIT_TIMEOUT}ms`);\n  }\n\n  public async estimateGas(txPayload: any, data: string) {\n    const txObject = {\n      from: txPayload.from || '0x',\n      to: txPayload.to || '0x',\n      data,\n      value: txPayload.value || 0,\n      gasPrice: txPayload.gasPrice || DEFAULT_GAS_PRICE,\n    };\n    return await this._rpcClient.request({\n      method: 'kai_estimateGas',\n      params: [txObject, 'latest'],\n    });\n  }\n}\n\nexport default KardiaTransaction;\n","export const WAIT_TIMEOUT = 60000;\nexport const DEFAULT_GAS = 900000;\nexport const DEFAULT_GAS_PRICE = 1000000000;\n","import BN from 'bn.js';\nimport abiJs from 'ethereumjs-abi';\nimport { decodeOutput } from '.';\nimport { isHexPrefixed, stripHexPrefix } from '../string';\n\nexport const parseOutput = (outputs: any[], result: string) => {\n  const outputTypes = outputs.map(output => output.type);\n  const outputBuffer = Buffer.from(result.replace('0x', ''), 'hex');\n  const decodeResult = abiJs.rawDecode(outputTypes, outputBuffer);\n  const rawOutput = decodeResult.map((decode, index) => {\n    if (outputTypes[index].endsWith(']')) {\n      const resultItems = decode.map((item: any) => {\n        if (outputTypes[index].startsWith('byte')) {\n          return item.toString('hex');\n        }\n        return item.toString();\n      });\n      return resultItems;\n    }\n    if (outputTypes[index].startsWith('byte')) {\n      return decode.toString('hex');\n    }\n    return decode.toString();\n  });\n  return decodeOutput(outputs, rawOutput);\n};\n\nexport const parseNumber = (arg: any) => {\n  const type = typeof arg;\n  if (type === 'string') {\n    if (isHexPrefixed(arg)) {\n      return new BN(stripHexPrefix(arg), 16);\n    } else {\n      return new BN(arg, 10);\n    }\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg;\n  } else {\n    throw new Error('Argument is not a number');\n  }\n};\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nexport const parseTypeArray = (type: string) => {\n  const tmp = type.match(/(.*)\\[(.*?)\\]$/);\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n  }\n  return null;\n};\n\nexport const parseTypeNxM = (type: string) => {\n  const tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type);\n  if (!tmp) throw new Error('Invalid [type]');\n  return [parseInt(tmp[1], 10), parseInt(tmp[2], 10)];\n};\n","import Bytes from '../bytes';\nimport BN from 'bn.js';\nimport abiJs from 'ethereumjs-abi';\nimport { parseNumber, parseTypeArray, parseTypeNxM } from './parser';\nimport { fromNumber as natFromNumber } from '../nat';\nimport { isHexStrict, setLengthRight, toHex } from '../string';\nimport { keccak256s } from '../hash';\n\n// Encodes a single item (can be dynamic array)\n// @returns: String\nconst encodeSingle = (type: string, arg: any): string => {\n  let size, num, i;\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg));\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0);\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'));\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?');\n    }\n    size = parseTypeArray(type);\n    if (!size) throw new Error('Invalid [type]');\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size);\n    }\n    let result = '';\n    type = type.slice(0, type.lastIndexOf('['));\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg);\n    }\n\n    if (size === 'dynamic') {\n      const length = encodeSingle('uint256', arg.length);\n      result = length;\n    }\n    for (i in arg) {\n      result = result + encodeSingle(type, arg[i]).replace('0x', '');\n    }\n    return result;\n  } else if (type === 'bytes') {\n    const length = Bytes.length(arg);\n    const nextMul32 = ((((length - 1) / 32) | 0) + 1) * 32;\n    const lengthEncoded = encode('uint256', natFromNumber(length)).data;\n    const bytesEncoded = Bytes.padRight(nextMul32, arg);\n    return Bytes.concat(lengthEncoded, bytesEncoded);\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size);\n    }\n\n    const result = '0x' + setLengthRight(arg, 32).toString('hex');\n    return result;\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid uint<N> width: ' + size);\n    }\n\n    num = parseNumber(arg);\n    if (num.bitLength() > size) {\n      throw new Error(\n        'Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength()\n      );\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative');\n    }\n    // const bytes32 = zeros(size === 256 ? 31 : 32);\n    // return Buffer.concat([bytes32, num.toArrayLike(Buffer, 'be')]);\n    const buf = '0x' + num.toArrayLike(Buffer, 'be', 32).toString('hex');\n    return buf;\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid int<N> width: ' + size);\n    }\n\n    num = parseNumber(arg);\n    if (num.bitLength() > size) {\n      throw new Error(\n        'Supplied int exceeds width: ' + size + ' vs ' + num.bitLength()\n      );\n    }\n\n    const buf = num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n    return '0x' + buf.toString('hex');\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type);\n\n    num = parseNumber(arg);\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative');\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))));\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type);\n\n    return encodeSingle(\n      'int256',\n      parseNumber(arg).mul(new BN(2).pow(new BN(size[1])))\n    );\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type);\n};\n\nexport const methodData = (method: Record<string, any>, params: any[]) => {\n  const methodSig =\n    method.name + '(' + method.inputs.map((i: any) => i.type).join(',') + ')';\n  const methodHash = keccak256s(methodSig).slice(0, 10);\n  const encodedParams = params.map((param, i) =>\n    encode(method.inputs[i].type, param)\n  );\n  let headBlock = '0x';\n  let dataBlock = '0x';\n  for (let i = 0; i < encodedParams.length; ++i) {\n    if (encodedParams[i].dynamic) {\n      const dataLoc = encodedParams.length * 32 + Bytes.length(dataBlock);\n      headBlock = Bytes.concat(\n        headBlock,\n        Bytes.pad(32, natFromNumber(dataLoc))\n      );\n      dataBlock = Bytes.concat(dataBlock, encodedParams[i].data);\n    } else {\n      headBlock = Bytes.concat(headBlock, encodedParams[i].data);\n    }\n  }\n  return Bytes.flatten([methodHash, headBlock, dataBlock]);\n};\n\nexport const decodeOutput = (outputTypes: any[], outputData: any) => {\n  if (outputTypes.length === 1) {\n    const type = outputTypes[0].type;\n    return decodeSingleOutput(type, outputData[0]);\n  }\n  return outputTypes.reduce((obj, data, index) => {\n    const key = data.name || index.toString();\n    const type = data.type;\n    obj[key] = decodeSingleOutput(type, outputData[index]);\n    return obj;\n  }, {});\n};\n\nconst decodeSingleOutput = (outputType: string, outputData: any): any => {\n  if (!outputData || outputData === '0x') {\n    return outputData;\n  }\n  if (isArray(outputType)) {\n    const type = outputType.replace(/\\[\\]/g, '');\n    const arrayData = Array.isArray(outputData)\n      ? outputData\n      : outputData.split(',');\n    return arrayData.map((data: any) => decodeSingleOutput(type, data));\n  }\n  if (outputType === 'address') {\n    return `0x${outputData.replace('0x', '')}`;\n  }\n  if (outputType.startsWith('uint') || outputType.startsWith('int')) {\n    return parseInt(outputData);\n  }\n  if (outputType === 'bool') {\n    return outputData === 'true';\n  }\n  if (outputType.startsWith('byte')) {\n    return `0x${outputData.replace('0x', '')}`;\n  }\n  return outputData;\n};\n\nexport const parseEvent = (\n  currentAbi: any[],\n  eventObject: Record<string, any>\n) => {\n  if (currentAbi.length === 0) {\n    throw new Error('ABI is require for paser');\n  }\n  const filterEvents = filterEventFromAbi(currentAbi);\n  const eventAbi = filterEvents.find(\n    item => item.signature === eventObject.topics[0]\n  );\n  if (eventAbi) {\n    const notIndexInputs = eventAbi.inputs.filter(\n      (item: any) => item.indexed === false\n    );\n    const indexInputs = eventAbi.inputs.filter(\n      (item: any) => item.indexed === true\n    );\n    const orderedInputs = [...notIndexInputs, ...indexInputs];\n    const outputTypes = orderedInputs.map(item => item.type);\n    let outputBuffer = Buffer.from(eventObject.data.replace('0x', ''), 'hex');\n    for (let i = 1; i < eventObject.topics.length; i++) {\n      const indexedBuffer = Buffer.from(\n        eventObject.topics[i].replace('0x', ''),\n        'hex'\n      );\n      outputBuffer = Buffer.concat([outputBuffer, indexedBuffer]);\n    }\n    const decodeResult = abiJs.rawDecode(outputTypes, outputBuffer);\n    const rawOutput = decodeResult.map((decode, index) => {\n      if (outputTypes[index].startsWith('byte')) {\n        return decode.toString('hex');\n      }\n      return decode.toString();\n    });\n    const decodeObject = decodeOutput(eventAbi.inputs, rawOutput);\n    return {\n      event: {\n        name: eventAbi.name,\n        ...decodeObject,\n      },\n      ...eventObject,\n    };\n  }\n  return eventObject;\n};\n\nconst filterEventFromAbi = (abi: any[]) => {\n  const filteredAbi = abi.filter(item => item.type === 'event');\n  return filteredAbi.map(item => ({\n    signature: methodSignature(item),\n    ...item,\n  }));\n};\n\nconst methodSignature = (method: Record<string, any>) => {\n  const methodSig =\n    method.name + '(' + method.inputs.map((i: any) => i.type).join(',') + ')';\n  return keccak256s(methodSig);\n};\n\nexport const encodeArray = (params: any[]) =>\n  params.map(param => {\n    if (isHexStrict(param)) {\n      return param;\n    } else {\n      return toHex(param);\n    }\n  });\n\n// Parse N from type<N>\nconst parseTypeN = (type: string) => {\n  const v = /^\\D+(\\d+)$/.exec(type);\n  if (!v) throw new Error('Invalid type');\n  return parseInt(v[1], 10);\n};\n\n// Is a type an array?\nconst isArray = (type: string) => type.lastIndexOf(']') === type.length - 1;\n\nconst isDynamic = (type: string) => {\n  if (type === 'bytes' || type === 'string') return true;\n  if (isArray(type)) return true;\n  return false;\n};\n\nconst encode = (type: string, value: any): { data: any; dynamic: boolean } => {\n  if (type === 'uint256' || type === 'bytes32' || type === 'address') {\n    return { data: Bytes.pad(32, value), dynamic: false };\n  } else {\n    return {\n      data: encodeSingle(type, value),\n      dynamic: isDynamic(type),\n    };\n  }\n};\n\nexport const deployData = (bytecode: string, method: any, params: any[]) => {\n  let headBlock = '0x';\n  let dataBlock = '0x';\n  if (params && method) {\n    const encodedParams = params.map((param, i) => {\n      return encode(method.inputs[i].type, param);\n    });\n    for (let i = 0; i < encodedParams.length; ++i) {\n      if (encodedParams[i].dynamic) {\n        const dataLoc = encodedParams.length * 32 + Bytes.length(dataBlock);\n        headBlock = Bytes.concat(\n          headBlock,\n          Bytes.pad(32, natFromNumber(dataLoc))\n        );\n        dataBlock = Bytes.concat(dataBlock, encodedParams[i].data);\n      } else {\n        headBlock = Bytes.concat(headBlock, encodedParams[i].data);\n      }\n    }\n  }\n  return Bytes.flatten([bytecode, headBlock, dataBlock]);\n};\n\nexport const findFunctionFromAbi = (\n  abi: any[],\n  type = 'function',\n  name = ''\n) => {\n  if (type !== 'constructor') {\n    return abi.find(item => item.type === type && item.name === name);\n    // return find(abi, (item) => item.type === type && item.name === name);\n  }\n  // return find(abi, (item) => item.type === type);\n  return abi.find(item => item.type === type);\n};\n","import { padToEven } from './string';\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = (i: number) => {\n  const hex = intToHex(i);\n\n  return Buffer.from(padToEven(hex.slice(2)), 'hex');\n};\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = (i: number) => {\n    let hex = i.toString(16); // eslint-disable-line\n\n  return `0x${hex}`;\n};\n","import { Client, RequestManager, HTTPTransport } from '@open-rpc/client-js';\nimport KardiaAccount from '../account';\nimport KardiaTransaction from '../transaction';\nimport {\n  deployData,\n  encodeArray,\n  findFunctionFromAbi,\n  methodData,\n  parseEvent,\n} from '../util/abi';\nimport { parseOutput } from '../util/abi/parser';\nimport { fromPrivate } from '../util/account';\nimport { isHexStrict, toHex } from '../util/string';\ninterface KardiaContractProps {\n  client?: Client;\n  provider?: string;\n  bytecodes?: string;\n  abi?: any[];\n}\n\ninterface SMCDeployObject {\n  gasLimit?: number;\n  gasPrice?: number;\n  params: any[];\n}\n\nconst DEFAULT_GAS = 900000;\nconst DEFAULT_GAS_PRICE = 1000000000;\n\nclass KardiaContract {\n  private _rpcClient: Client;\n  public bytecodes: string;\n  public abi: any[];\n  private txModule: KardiaTransaction;\n  constructor({ client, bytecodes, abi, provider }: KardiaContractProps) {\n    if (client) {\n      this._rpcClient = client;\n    } else if (provider) {\n      const transport = new HTTPTransport(provider);\n      this._rpcClient = new Client(new RequestManager([transport]));\n    } else {\n      throw new Error('Either [client] or [provider] must be provided');\n    }\n\n    this.txModule = new KardiaTransaction({ client: this._rpcClient });\n\n    this.bytecodes = bytecodes || '';\n    if (abi && !Array.isArray(abi)) throw new Error('Invalid [abi]');\n    this.abi = abi || [];\n  }\n\n  updateAbi(abi: any[]) {\n    this.abi = abi;\n  }\n  updateByteCode(bytecodes: string) {\n    this.bytecodes = bytecodes;\n  }\n  info() {\n    return {\n      byteCode: this.bytecodes,\n      abi: this.abi,\n    };\n  }\n  deploy({ params }: SMCDeployObject) {\n    const bytecode = this.bytecodes;\n    const abi = this.abi;\n    const constructorAbi = findFunctionFromAbi(abi, 'constructor');\n    const decorBycode = '0x' + bytecode.replace('0x', '');\n    const paramsDecorate = params.map(param => {\n      if (Array.isArray(param)) {\n        return encodeArray(param);\n      } else if (isHexStrict(param)) {\n        return param;\n      } else {\n        return toHex(param);\n      }\n    });\n    const data = deployData(decorBycode, constructorAbi, paramsDecorate);\n    return {\n      txData: () => data,\n      getDefaultTxPayload: () => {\n        return {\n          amount: 0,\n          data,\n          gasPrice: DEFAULT_GAS_PRICE,\n          gas: DEFAULT_GAS,\n        };\n      },\n      estimateGas: async (txPayload: Record<string, any> = {}) => {\n        return await this.txModule.estimateGas(txPayload, data);\n      },\n      send: async (privateKey: string, txPayload: Record<string, any> = {}) => {\n        const senderAccount = fromPrivate(privateKey);\n\n        const account = new KardiaAccount({ client: this._rpcClient });\n        const accountNonce = await account.getNonce(senderAccount.address);\n        const transaction = new KardiaTransaction({ client: this._rpcClient });\n        const result = await transaction.sendTransaction(\n          {\n            receiver: '0x',\n            amount: txPayload.amount || 0,\n            nonce: txPayload.nonce || accountNonce,\n            gasPrice: txPayload.gasPrice || DEFAULT_GAS_PRICE,\n            gas: txPayload.gas || DEFAULT_GAS,\n            data,\n          },\n          privateKey,\n          true\n        );\n        return result;\n      },\n    };\n  }\n\n  invokeContract(name: string, params: any[]) {\n    const functionFromAbi = findFunctionFromAbi(this.abi, 'function', name);\n    const paramsDecorate = params.map(param => {\n      if (Array.isArray(param)) {\n        return encodeArray(param);\n      } else if (isHexStrict(param)) {\n        return param;\n      } else {\n        return toHex(param);\n      }\n    });\n    const data = methodData(functionFromAbi, paramsDecorate);\n    return {\n      txData: () => data,\n      getDefaultTxPayload: () => {\n        return {\n          amount: 0,\n          gasPrice: DEFAULT_GAS_PRICE,\n          // gas: DEFAULT_GAS,\n          data,\n        };\n      },\n      estimateGas: async (txPayload: Record<string, any>) => {\n        return await this.txModule.estimateGas(txPayload, data);\n      },\n      getTxObject: async () => {\n        const defaultPayload: any = {\n          amount: 0,\n          gasPrice: DEFAULT_GAS_PRICE,\n          data,\n        };\n        const estimatedGas = await this.txModule.estimateGas(\n          defaultPayload,\n          data\n        );\n        defaultPayload.gas = estimatedGas;\n        return defaultPayload;\n      },\n      send: async (\n        privateKey: string,\n        contractAddress: string,\n        txPayload: Record<string, any> = {}\n      ) => {\n        const senderAccount = fromPrivate(privateKey);\n\n        const account = new KardiaAccount({ client: this._rpcClient });\n        const accountNonce = await account.getNonce(senderAccount.address);\n\n        const transaction = new KardiaTransaction({ client: this._rpcClient });\n        const txResult = await transaction.sendTransaction(\n          {\n            receiver: contractAddress,\n            amount: txPayload.amount || 0,\n            nonce: txPayload.nonce || accountNonce,\n            gasPrice: txPayload.gasPrice || DEFAULT_GAS_PRICE,\n            gas: txPayload.gas || DEFAULT_GAS,\n            data,\n          },\n          privateKey,\n          true\n        );\n\n        const events = txResult.logs\n          ? txResult.logs.map((item: any) => parseEvent(this.abi, item))\n          : [];\n        const result = {\n          events,\n          ...txResult,\n        };\n        return result;\n      },\n      call: async (\n        contractAddress: string,\n        txPayload: Record<string, any> = {},\n        blockHeight: any = 'latest'\n      ) => {\n        const callObject = {\n          from: txPayload.from || '0x',\n          to: contractAddress,\n          data: data,\n          value: txPayload.amount || 0,\n          gasPrice: txPayload.gasPrice || DEFAULT_GAS_PRICE,\n          gas: txPayload.gas || DEFAULT_GAS,\n        };\n        // const result = await api.callSmartContract(callObject, blockHeight);\n        const result = await this._rpcClient.request({\n          method: 'kai_kardiaCall',\n          params: [callObject, blockHeight],\n        });\n\n        return parseOutput(functionFromAbi.outputs, result);\n      },\n    };\n  }\n\n  async parseEvent(txHash: string) {\n    // Get Tx receipt\n    const transaction = new KardiaTransaction({ client: this._rpcClient });\n    const tx = await transaction.getTransactionReceipt(txHash);\n    // Parse event\n    return tx.logs\n      ? tx.logs.map((item: any) => parseEvent(this.abi, item))\n      : [];\n  }\n}\n\nexport default KardiaContract;\n","export const krc20ABI = [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'burn',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'mint',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'nonces',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","import { Client, RequestManager, HTTPTransport } from '@open-rpc/client-js';\nimport KardiaContract from '../smc';\nimport { checkAddressChecksum } from '../util/account';\nimport { krc20ABI } from './krc20.abi';\nimport { BigNumber } from 'bignumber.js';\n\ninterface KRC20Props {\n  client?: Client;\n  provider?: string;\n  address?: string;\n  name?: string;\n  symbol?: string;\n  decimals?: number;\n}\n\nclass KRC20 {\n  private _rpcClient: Client;\n  public address: string = '';\n  public name: string = '';\n  public decimals: number = 18;\n  public symbol: string = '';\n\n  private _smcInstance: KardiaContract;\n\n  constructor({\n    client,\n    address,\n    name,\n    decimals,\n    symbol,\n    provider,\n  }: KRC20Props) {\n    if (client) {\n      this._rpcClient = client;\n    } else if (provider) {\n      const transport = new HTTPTransport(provider);\n      this._rpcClient = new Client(new RequestManager([transport]));\n    } else {\n      throw new Error('Either [client] or [provider] must be provided');\n    }\n\n    this._smcInstance = new KardiaContract({ client: this._rpcClient });\n    this._smcInstance.updateAbi(krc20ABI);\n\n    if (address) {\n      if (!checkAddressChecksum(address)) throw new Error('Invalid [address]');\n      this.address = address;\n    }\n    if (name) {\n      this.name = name;\n    }\n    if (symbol) {\n      this.symbol = symbol;\n    }\n    if (decimals) {\n      this.decimals = decimals;\n    }\n  }\n\n  private validateAddress() {\n    if (!checkAddressChecksum(this.address))\n      throw new Error('Invalid [address]');\n  }\n\n  public getContractInstance() {\n    return this._smcInstance;\n  }\n\n  public async getName(fetch?: boolean) {\n    if (!fetch) return this.name;\n    this.validateAddress();\n    const name = await this._smcInstance\n      .invokeContract('name', [])\n      .call(this.address);\n    if (name) {\n      this.name = name;\n    }\n    return this.name;\n  }\n\n  public async getDecimals(fetch?: boolean) {\n    if (!fetch) return this.decimals;\n    this.validateAddress();\n    const decimals = await this._smcInstance\n      .invokeContract('decimals', [])\n      .call(this.address);\n    if (decimals) {\n      this.decimals = decimals;\n    }\n    return this.decimals;\n  }\n\n  public async getSymbol(fetch?: boolean) {\n    if (!fetch) return this.symbol;\n    this.validateAddress();\n    const symbol = await this._smcInstance\n      .invokeContract('symbol', [])\n      .call(this.address);\n    if (symbol) {\n      this.symbol = symbol;\n    }\n    return this.symbol;\n  }\n\n  public async getTotalSupply(\n    format: 'string' | 'BigNumber' | 'number' = 'string'\n  ) {\n    this.validateAddress();\n    const totalSupply = await this._smcInstance\n      .invokeContract('totalSupply', [])\n      .call(this.address);\n    if (format === 'BigNumber') {\n      return new BigNumber(totalSupply);\n    }\n    if (format === 'string') {\n      return totalSupply.toLocaleString('fullwide', { useGrouping: false });\n    }\n    return totalSupply;\n  }\n\n  public async getFromAddress(address: string) {\n    if (!checkAddressChecksum(address)) throw new Error('Invalid [address]');\n    this.address = address;\n    await this.getName(true);\n    await this.getDecimals(true);\n    await this.getSymbol(true);\n  }\n\n  public async balanceOf(address: string) {\n    if (!checkAddressChecksum(address)) throw new Error('Invalid [address]');\n    const balance = await this._smcInstance\n      .invokeContract('balanceOf', [address])\n      .call(this.address);\n    return balance;\n  }\n\n  public async transfer(privateKey: string, to: string, amount: number) {\n    this.validateAddress();\n    if (!checkAddressChecksum(to)) throw new Error('Invalid [to]');\n    if (amount < 0) throw new Error('Invalid [amount]');\n\n    const invocation = this._smcInstance.invokeContract('transfer', [\n      to,\n      amount,\n    ]);\n    const defaultPayload = invocation.getDefaultTxPayload();\n    const estimatedGas = await invocation.estimateGas(defaultPayload);\n\n    return invocation.send(privateKey, this.address, { gas: estimatedGas * 2 });\n  }\n}\n\nexport default KRC20;\n","import { RequestManager, HTTPTransport, Client } from '@open-rpc/client-js';\nimport KardiaAccount from './account';\nimport KAIChain from './kai';\nimport KardiaContract from './smc';\nimport KardiaTransaction from './transaction';\nimport KRC20 from './krc20';\n\ninterface KardiaClientProps {\n  endpoint: string;\n}\n\nclass KardiaClient {\n  private _rpcClient: Client;\n  public account: KardiaAccount;\n  public transaction: KardiaTransaction;\n  public kaiChain: KAIChain;\n  public contract: KardiaContract;\n  public krc20: KRC20;\n  constructor({ endpoint }: KardiaClientProps) {\n    // Init RPC client\n    const transport = new HTTPTransport(endpoint);\n    this._rpcClient = new Client(new RequestManager([transport]));\n\n    // Init sub module\n    this.account = new KardiaAccount({ client: this._rpcClient });\n    this.transaction = new KardiaTransaction({ client: this._rpcClient });\n    this.kaiChain = new KAIChain({ client: this._rpcClient });\n    this.contract = new KardiaContract({ client: this._rpcClient });\n    this.krc20 = new KRC20({ client: this._rpcClient });\n  }\n}\n\nexport { KardiaTransaction, KardiaAccount, KAIChain, KRC20 };\nexport default KardiaClient;\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","HEX_CHARS","split","KECCAK_PADDING","SHIFT","RC","f","s","h","l","n","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak","bits","str","msg","parseInt","message","code","blocks","byteCount","blockCount","outputBlocks","index","block","start","charCodeAt","lastByteIndex","hex","j","update","concat","Keccak","keccak256","keccak256s","BN","require","fromNumber","a","test","fromNat","bn","b","reduce","r","bs","pad","isHexStrict","isString","isNumber","isHexPrefixed","stripHexPrefix","padToEven","isBN","numberToHex","isFinite","number","numberToBN","e","toBN","lt","substr","toHex","returnType","isAddress","toLowerCase","replace","isBoolean","isObject","utf8","encode","join","utf8ToHex","JSON","stringify","indexOf","secp256k1","elliptic","ec","checkAddressChecksum","address","sha3Result","bytes","c","hexToBytes","returnValue","sha3","addressHash","toUpperCase","fromPrivate","privateKey","buffer","Buffer","from","publicKey","keyFromPrivate","getPublic","checksumAddress","toChecksum","trimLeadingZero","startsWith","makeEven","sign","addToV","hash","num","signature","canonical","recoveryParam","Bytes","makeSigner","KardiaAccount","_rpcClient","client","getBalance","options","params","blockHash","blockHeight","request","getNonce","getWalletFromPK","privateKeyBuffer","EthUtil","EtherWallet","fromPrivateKey","getChecksumAddressString","balance","getWalletFromMnemonic","mnemonic","wallet","ethers","Wallet","fromMnemonic","trim","generateWallet","createRandom","zero","negative1","unitMap","hydro","oxy","kai","getValueOfUnit","unitInput","unit","unitValue","KAIChain","getBlockNumber","isValidator","getValidators","withDelegators","getBlockByBlockNumber","blockNumber","getBlockByHash","getBlockHeaderByBlockNumber","getBlockHeaderByHash","newFilter","fromBlock","toBlock","topics","newBlockFilter","uninstallFilter","filterId","getFilterChanges","getFilterLogs","getLogs","blockhash","KAIFromHydro","hydroValue","input","negative","base","baseLength","mul","fraction","mod","div","after","removeTrailingZeros","fromHydro","HydroFromKAI","kaiValue","match","String","toTwos","dividedToIntegerBy","toPrecision","numberToString","substring","comps","whole","add","toHydro","tree","uint","len","dataTree","map","decode","parseTree","head","parseHex","parseList","parseLength","lim","list","sleep","ms","setTimeout","KardiaTransaction","provider","transport","HTTPTransport","Client","RequestManager","getTransaction","txHash","getPendingTransaction","getTransactionReceipt","signTransaction","tx","_privateKey","gas","nonce","gasPrice","transaction","to","data","rlpEncoded","decodeSign","rawTx","rawTransaction","messageHash","v","generateTransaction","receiver","amount","gasLimit","_gasLimit","_value","_receiver","sendTransaction","waitUntilMined","waitTimeOut","estimateGas","generatedTx","signedTx","_waitTimeOut","breakTimeout","Date","now","receipt","txPayload","txObject","parseOutput","outputs","outputTypes","output","outputBuffer","rawOutput","abiJs","rawDecode","endsWith","item","decodeOutput","parseNumber","toArray","parseTypeNxM","tmp","exec","encodeSingle","size","isArray","parseTypeArray","lastIndexOf","parse","nextMul32","lengthEncoded","natFromNumber","bytesEncoded","padRight","parseTypeN","right","buf","allocUnsafe","fill","isBuffer","Array","intToHex","toArrayLike","toBuffer","copy","setLength","bitLength","pow","outputData","decodeSingleOutput","outputType","parseEvent","currentAbi","eventObject","eventAbi","filterEventFromAbi","find","notIndexInputs","inputs","filter","indexed","indexInputs","indexedBuffer","decodeObject","event","abi","methodSignature","methodSig","encodeArray","param","isDynamic","dynamic","findFunctionFromAbi","KardiaContract","bytecodes","txModule","updateAbi","updateByteCode","byteCode","deploy","bytecode","constructorAbi","headBlock","dataBlock","encodedParams","dataLoc","deployData","txData","getDefaultTxPayload","_this","send","senderAccount","account","accountNonce","invokeContract","functionFromAbi","paramsDecorate","methodHash","methodData","_this2","getTxObject","defaultPayload","contractAddress","events","txResult","logs","callObject","_this3","krc20ABI","payable","stateMutability","anonymous","internalType","constant","KRC20","decimals","symbol","_smcInstance","validateAddress","getContractInstance","getName","fetch","getDecimals","getSymbol","getTotalSupply","format","totalSupply","BigNumber","toLocaleString","useGrouping","getFromAddress","balanceOf","transfer","invocation","endpoint","kaiChain","contract","krc20"],"mappings":"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A,EACA,MACA,WACA,WACA,WACA,MACA,EACA,WACA,EACA,WACA,WACA,MACA,WACA,IACA,EACA,IACA,EACA,WACA,EACA,WACA,EACA,WACA,EACA,IACA,WACA,MACA,WACA,MACA,WACA,MACA,WACA,IACA,WACA,MACA,EACA,WACA,WACA,WACA,WACA,MACA,WACA,WACA,EACA,WACA,YAmHIC,EAAI,SAACC,OACLC,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,OAEG5D,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACvBC,EAAKJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCK,EAAKL,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAGtCQ,EAAKR,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCS,EAAKT,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCU,EAAKV,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCW,EAAKX,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAKtCE,GAHAW,EAAKb,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,OANtCO,EAAKP,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MASrB,GAVjBM,EAAKN,EAAE,GAAKA,EAAE,IAAMA,EAAE,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"}